#!/usr/bin/env bash
# template-task: 2.0.0
#######################################
# PGSQL / Query / Info
#
# Version: 1.0.1
#
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-/opt/sysop64}"
# shellcheck disable=SC2015 source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" && source "${S64_CORE_PATH_ROOT}/core/pgsql-lib" || { echo "Error: unable to load module library" && exit 1; }
# shellcheck disable=SC2015,SC2154 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

#
# Globals
#

export PGPASSWORD
export PSQL_PAGER=''

#
# Functions
#

function show_active() {
  bl64_dbg_app_show_function
  printf "
    SELECT
      datname,
      usename,
      backend_type,
      query_id,
      query_start,
      now(),
      now() - query_start as elapsed,
      query
    FROM
      pg_stat_activity
    WHERE
      state = 'active'
    ORDER BY
      datname,
      usename,
      backend_type,
      query_id,
      query_start;
  " |
  s64_psql_lib_run_psql \
    --host="$S64_PGSQL_SERVER_HOST" \
    --port="$S64_PGSQL_SERVER_PORT" \
    --dbname="$S64_PGSQL_DB_NAME" \
    --username="$S64_PGSQL_SERVER_USER" \
    --file='-'
}

function initialize() {
  bl64_dbg_app_show_function
  bl64_check_parameter 'COMMAND' || { help && return 1; }

  s64_psql_lib_setup &&
    bl64_check_export 'S64_PGSQL_SERVER_PASSWORD' ||
    return $?

  PGPASSWORD="$S64_PGSQL_SERVER_PASSWORD"
}

function help() {
  bl64_msg_show_usage \
    '-a [-o Host] [-p Port] [-u User] [-b DB] [-V Verbose] [-D Debug] [-h]' \
    'PGSQL / Query / Info' \
    '
    -a         : Show active queries
    ' '
    -o Host    : Host FQDN. Alternative shell-env: S64_PGSQL_SERVER_HOST
    -p Port    : DB Port. Alternative shell-ehv: S64_PGSQL_SERVER_PORT
    -u User    : DB User. Alternative shell-ehv: S64_PGSQL_SERVER_USER
    -b DB      : DB Name. Alternative shell-ehv: S64_PGSQL_DB_NAME
    -h         : Show help
    ' '
    -V Verbose : Set verbosity level. Format: one of BL64_MSG_VERBOSE_*
    -D Debug   : Enable debugging mode. Format: one of BL64_DBG_TARGET_*
    '
}

#
# Main
#

declare COMMAND="$BL64_VAR_NULL"
declare OPTION=''

(($# == 0)) && help && exit 1
while getopts ':ao:p:u:b:V:D:h' OPTION; do
  case "$OPTION" in
  a) COMMAND='show_active' ;;
  o) S64_PGSQL_SERVER_HOST="$OPTARG" ;;
  p) S64_PGSQL_SERVER_PORT="$OPTARG" ;;
  u) S64_PGSQL_SERVER_USER="$OPTARG" ;;
  b) S64_PGSQL_DB_NAME="$OPTARG" ;;
  V) S64_CORE_SET_VERBOSE="$OPTARG" ;;
  D) S64_CORE_SET_DEBUG="$OPTARG" ;;
  h) help && exit 0 ;;
  *) help && exit 1 ;;
  esac
done
bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && initialize || exit $?

bl64_msg_show_batch_start "${BL64_SCRIPT_ID}:$COMMAND"
"${COMMAND}"
bl64_msg_show_batch_finish $? "${BL64_SCRIPT_ID}:$COMMAND"
