#!/usr/bin/env bash
# template-one: 2.0.0
# template-import: 1.0.0
#######################################
# Linux / Package / Upgrade
#
# Version: 1.1.1
#
#######################################
# Copyright [2024] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-/opt/sysop64}"
# shellcheck source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" && source "${S64_CORE_PATH_ROOT}/core/linux-lib" || { echo "Error: unable to load module library" && exit 1; }
# shellcheck disable=SC2015 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

#
# Functions
#

function upgrade_ubuntu() {
  bl64_dbg_app_show_function
  bl64_msg_show_task 'prepare for upgrade'
  bl64_pkg_prepare &&
    bl64_msg_show_task 'upgrade all packages' &&
    bl64_pkg_run_apt upgrade \
      --with-new-pkgs \
      --show-progress \
      "$BL64_PKG_SET_ASSUME_YES"
}

function upgrade_fedora() {
  bl64_dbg_app_show_function
  bl64_msg_show_task 'upgrade all packages'
  bl64_pkg_upgrade
}

function upgrade() {
  bl64_dbg_app_show_function
  case "$BL64_OS_DISTRO" in
  ${BL64_OS_UB}-*) upgrade_ubuntu ;;
  ${BL64_OS_FD}-*) upgrade_fedora ;;
  *) bl64_check_alert_unsupported ;;
  esac
}

function initialize() {
  bl64_dbg_app_show_function
  bl64_check_privilege_root &&
    bl64_os_check_compatibility \
      "${BL64_OS_UB}" \
      "${BL64_OS_FD}"
}

#
# Main
#

declare command='upgrade'

bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && initialize || exit $?
bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
upgrade
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
