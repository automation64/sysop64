#!/usr/bin/env bash
# template-one: 3.2.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

declare S64_CORE_PATH_AT64="${HOME}/at64"
[[ ! -d "$S64_CORE_PATH_AT64" ]] && S64_CORE_PATH_AT64='/opt'
declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-${S64_CORE_PATH_AT64}/sysop64}"
# shellcheck disable=SC2015 source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" && source "${S64_CORE_PATH_ROOT}/core/linux-lib" || { echo "Error: unable to load module library (S64_CORE_PATH_AT64=${S64_CORE_PATH_AT64})" && exit 1; }
# shellcheck disable=SC2015 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

declare MY_SERVICE_NAME="${1:-}"

function my_service_start_alpine() {
  bl64_dbg_app_show_function "$@"
  local service="$1"
  s64_linux_lib_run_rcservice "$service" start
}

function my_service_start_debian() {
  bl64_dbg_app_show_function "$@"
  local service="$1"
  s64_linux_lib_run_systemctl start "$service"
}

function my_service_start_fedora() {
  bl64_dbg_app_show_function "$@"
  local service="$1"
  s64_linux_lib_run_systemctl start "$service"
}

function my_service_start_redhat() {
  bl64_dbg_app_show_function "$@"
  local service="$1"
  s64_linux_lib_run_systemctl start "$service"
}

function my_service_start_suse() {
  bl64_dbg_app_show_function "$@"
  local service="$1"
  s64_linux_lib_run_systemctl start "$service"
}

function my_service_start() {
  bl64_dbg_app_show_function "$@"
  local service="$1"
  case "$BL64_OS_FLAVOR" in
  "$BL64_OS_FLAVOR_ALPINE") my_service_start_alpine "$service" ;;
  "$BL64_OS_FLAVOR_DEBIAN") my_service_start_debian "$service" ;;
  "$BL64_OS_FLAVOR_FEDORA") my_service_start_fedora "$service" ;;
  "$BL64_OS_FLAVOR_REDHAT") my_service_start_redhat "$service" ;;
  "$BL64_OS_FLAVOR_SUSE") my_service_start_suse "$service" ;;
  *)
    bl64_check_alert_unsupported
    return $?
    ;;
  esac
}

function my_initialize() {
  bl64_dbg_app_show_function
  s64_linux_lib_setup &&
    bl64_check_parameter 'MY_SERVICE_NAME' &&
    bl64_check_privilege_root ||
    return $?
  bl64_msg_show_about
  bl64_msg_show_setup "$BL64_VAR_DEFAULT" \
    'MY_SERVICE_NAME'
}

bl64_lib_script_version_set '1.0.0'
bl64_msg_help_about_set 'Start a system service on the system'
bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && my_initialize || exit $?
bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
my_service_start "$MY_SERVICE_NAME"
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
