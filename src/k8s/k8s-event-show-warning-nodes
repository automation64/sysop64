#!/usr/bin/env bash
# template-one: 3.2.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

declare S64_CORE_PATH_AT64="${HOME}/at64"
[[ ! -d "$S64_CORE_PATH_AT64" ]] && S64_CORE_PATH_AT64='/opt'
declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-${S64_CORE_PATH_AT64}/sysop64}"
# shellcheck source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" && source "${S64_CORE_PATH_ROOT}/core/k8s-lib" || { echo "Error: unable to load module library (S64_CORE_PATH_AT64=${S64_CORE_PATH_AT64})" && exit 1; }
# shellcheck disable=SC2015 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

declare MY_NODE_NAME="${1:-}"

function my_initialize() {
  bl64_dbg_app_show_function
  s64_k8s_lib_setup ||
    return $?
  bl64_msg_show_about
  bl64_msg_show_setup "$BL64_VAR_DEFAULT" \
    'MY_NODE_NAME'
}

bl64_lib_script_version_set '1.0.0'
bl64_msg_help_about_set 'Show K8S Warning Events for Nodes'
bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && my_initialize || exit $?
bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
s64_k8s_lib_run_kubectl \
  get events \
  $(s64_k8s_lib_cli_set_ns "$MY_K8S_NAMESPACE") \
  --field-selector="type=Warning" \
  --field-selector="involvedObject.kind=Node${MY_NODE_NAME:+,involvedObject.name=$MY_NODE_NAME}" \
  --sort-by="lastTimestamp"
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
