#!/usr/bin/env bash
# template-task: 3.0.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

declare S64_CORE_PATH_AT64="${HOME}/at64"
[[ ! -d "$S64_CORE_PATH_AT64" ]] && S64_CORE_PATH_AT64='/opt'
declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-${S64_CORE_PATH_AT64}/sysop64}"
# shellcheck disable=SC2015 source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" && source "${S64_CORE_PATH_ROOT}/core/k8s-lib" || { echo "Error: unable to load module library" && exit 1; }
# shellcheck disable=SC2015,SC2154 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

#
# Functions
#

function all_check() {
  bl64_dbg_app_show_function "$@"
  local namespace="$1"
  local expand="$2"

  bl64_msg_show_info 'Events of type Warning'
  # shellcheck disable=SC2086,SC2046
  bl64_k8s_run_kubectl \
    "$BL64_VAR_DEFAULT" \
    get events \
    $(s64_k8s_lib_cli_set_ns "$namespace") \
    $(s64_k8s_lib_cli_set_output "$expand") \
    --field-selector='type=Warning' \
    --sort-by='lastTimestamp'
}

function pod_check() {
  bl64_dbg_app_show_function "$@"
  local namespace="$1"
  local expand="$2"

  bl64_msg_show_info 'Events of type Warning for Pods not healthy'
  # shellcheck disable=SC2086,SC2046
  bl64_k8s_run_kubectl \
    "$BL64_VAR_DEFAULT" \
    get events \
    $(s64_k8s_lib_cli_set_ns "$namespace") \
    $(s64_k8s_lib_cli_set_output "$expand") \
    --field-selector='type=Warning' \
    --field-selector='involvedObject.ind=Pod' \
    --field-selector='reason=BackOff' \
    --sort-by='lastTimestamp'
}

function initialize() {
  bl64_dbg_app_show_function
  s64_k8s_lib_setup
}

#
# Main
#

declare COMMAND='all_check'
declare OPTION=''
declare DETAIL_FORMAT="$BL64_VAR_DEFAULT"
declare K8S_NAMESPACE="$BL64_VAR_DEFAULT"

bl64_lib_script_version_set '3.0.0'
bl64_msg_help_usage_set '-a|-p [-n Namespace] [-j] [-V Verbose] [-D Debug] [-h]'
bl64_msg_help_about_set 'K8S / Event / Check'
# shellcheck disable=SC2016
bl64_msg_help_parameters_set \
'-a         : Check all events
-p         : Check pod events
-h         : Show help
-j         : Expand events using JSON format
-n Namespace: Kubernetes namespace. Default: all
-V Verbose : Set verbosity level. Format: one of BL64_MSG_VERBOSE_*
-D Debug   : Enable debugging mode. Format: one of BL64_DBG_TARGET_*'

while getopts ':apjn:V:D:h' OPTION; do
  case "$OPTION" in
  a) COMMAND='all_check' ;;
  p) COMMAND='pod_check' ;;
  n) K8S_NAMESPACE="$OPTARG" ;;
  j) DETAIL_FORMAT='json' ;;
  V) S64_CORE_SET_VERBOSE="$OPTARG" ;;
  D) S64_CORE_SET_DEBUG="$OPTARG" ;;
  h) bl64_msg_help_show && exit 0 ;;
  *) bl64_msg_help_show && exit 1 ;;
  esac
done
bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && initialize || exit $?

bl64_msg_show_batch_start "${BL64_SCRIPT_ID}:$COMMAND"
"$COMMAND" "$K8S_NAMESPACE" "$DETAIL_FORMAT"
bl64_msg_show_batch_finish $? "${BL64_SCRIPT_ID}:$COMMAND"
