#!/usr/bin/env bash
# template-one: 3.0.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

declare S64_CORE_PATH_AT64="${HOME}/at64"
[[ ! -d "$S64_CORE_PATH_AT64" ]] && S64_CORE_PATH_AT64='/opt'
declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-${S64_CORE_PATH_AT64}/sysop64}"
# shellcheck disable=SC2015 source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" && source "${S64_CORE_PATH_ROOT}/core/kind-lib" || { echo "Error: unable to load module library" && exit 1; }
# shellcheck disable=SC2015,SC2154 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

function cluster_destroy() {
  bl64_dbg_app_show_function
  bl64_msg_show_task "delete cluster ($S64_KIND_SET_CLUSTER_NAME)"
  s64_kind_lib_run_kind \
    delete cluster \
    --name "$S64_KIND_SET_CLUSTER_NAME"
}
function network_destroy() {
  bl64_dbg_app_show_function
  local network_kind='kind'
  if bl64_cnt_network_is_defined "$network_kind"; then
    bl64_msg_show_task "delete docker network ($network_kind)"
    bl64_cnt_cli \
      network \
      rm \
      "$network_kind"
  fi
}

function initialize() {
  bl64_dbg_app_show_function
  s64_kind_lib_setup &&
    bl64_ui_ask_confirmation \
      'Do you want to completely destroy the cluster?. Confirm by typing:' 'YES'
}

bl64_lib_script_version_set '2.0.1'
bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && initialize || exit $?
bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
cluster_destroy &&
  network_destroy
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
