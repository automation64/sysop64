#!/usr/bin/env bash
# template-task: 2.0.0
#######################################
# AWS / EKS / AddOns / Show
#
# Version: 1.1.0
#
#######################################
# Copyright [2024] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-/opt/sysop64}"
# shellcheck source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" &&
  source "${S64_CORE_PATH_ROOT}/aws/aws-lib" || { echo "Error: unable to load module library" && exit 1; }
# shellcheck disable=SC2015 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

#
# Functions
#

function aws_eks_addons_list() {
  local cluster_name="$1"
  # shellchedk disable=SC2086
  bl64_aws_run_aws \
    eks \
    list-addons \
    $BL64_AWS_SET_FORMAT_JSON \
    --cluster-name "$cluster_name" |
    "$S64_CORE_PATH_JQ" \
      -r '.addons[]'
}

function aws_eks_addons_show() {
  local cluster_name="$1"
  local addon_name=''
  bl64_aws_run_aws
  for addon_name in $(aws_eks_addons_list "$cluster_name"); do
    bl64_aws_run_aws \
      eks \
      describe-addon \
      --cluster-name "$cluster_name" \
      --addon-name "$addon_name"
  done
}

function initialize() {
  bl64_dbg_app_show_function
  bl64_check_export 'cluster_name' &&
    bl64_check_command_search_path "$S64_CORE_PATH_JQ" &&
    s64_aws_lib_setup
}

#
# Main
#

declare main_cluster_name="${1:-}"

bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && initialize || exit $?
bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
aws_eks_addons_show "$main_cluster_name"
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
