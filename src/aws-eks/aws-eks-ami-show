#!/usr/bin/env bash
# template-task: 2.0.0
#######################################
# AWS EKS / AMI / Show
#
# Version: 1.1.0
#
#######################################
# Copyright [2024] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-/opt/sysop64}"
# shellcheck source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" &&
  source "${S64_CORE_PATH_ROOT}/aws/aws-lib" ||
  { echo "Error: unable to load module library" && exit 1; }
# shellcheck disable=SC2015 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" ||
  { echo 'Error: unable to load bashlib64' && exit 1; }

#
# Functions
#

function show_recommended() {
  bl64_dbg_app_show_function "$@"
  local ami_family="$1"
  local k8s_version="$2"
  local endpoint=''

  if [[ "$ami_family" == 'AL2' ]]; then
    endpoint="$S64_AWS_API_EKS_AMI_AL2"
  elif [[ "$ami_family" == 'AL2023' ]]; then
    endpoint="$S64_AWS_API_EKS_AMI_AL2023_X86_64_STANDARD"
  fi

  bl64_aws_run_aws \
    ssm get-parameter \
    --name "/aws/service/eks/optimized-ami/${k8s_version}/${endpoint}/recommended/image_id" \
    --query 'Parameter.Value'
}

function initialize() {
  bl64_dbg_app_show_function
  bl64_check_parameter 'main_command' ||
    { help && return 1; }
  s64_aws_lib_setup
}

function help() {
  bl64_msg_show_usage \
    '-l [-r Version] [-a Family] [-V Verbose] [-D Debug] [-h]' \
    'AWS EKS / AMI / Info' \
    '
    -l         : Show recommended AMI for EKS version
    ' '
    -h         : Show help
    ' '
    -a Family  : AMI Family. Format: AL2|AL2023
    -r Version : K8S version for the AMI. Format: X.Y
    -V Verbose : Set verbosity level. Format: one of BL64_MSG_VERBOSE_*
    -D Debug   : Enable debugging mode. Format: one of BL64_DBG_TARGET_*
    '
}

#
# Main
#

declare main_command="$BL64_VAR_NULL"
declare main_option=''
declare ami_family='AL2023'
declare k8s_version='1.29'

(($# == 0)) && help && exit 1
while getopts ':la:r:V:D:h' main_option; do
  case "$main_option" in
  l) main_command='show_recommended' ;;
  a) main_ami_family="$OPTARG" ;;
  r) main_k8s_version="$OPTARG" ;;
  V) S64_CORE_SET_VERBOSE="$OPTARG" ;;
  D) S64_CORE_SET_DEBUG="$OPTARG" ;;
  h) help && exit 0 ;;
  *) help && exit 1 ;;
  esac
done
bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" &&
  initialize || exit $?

bl64_msg_show_batch_start "$main_command"
"${main_command}" "$main_ami_family" "$main_k8s_version"
bl64_msg_show_batch_finish $? "$main_command"
