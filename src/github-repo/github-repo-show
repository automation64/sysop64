#!/usr/bin/env bash
# template-task: 2.0.0
#######################################
# GitHub / Repo / Show
#
# Version: 1.0.1
#
#######################################
# Copyright [2024] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-/opt/sysop64}"
# shellcheck source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" && source "${S64_CORE_PATH_ROOT}/core/github-lib" || { echo "Error: unable to load module library" && exit 1; }
# shellcheck disable=SC2015 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

#
# Functions
#

function show() {
  bl64_dbg_app_show_function
  local owner="$1"
  local repository="$2"
  local api_prefix="repos/${owner}/${repository}"

  bl64_msg_show_info 'branch protection'
  s64_github_lib_run_gh api "${api_prefix}"
}

function initialize() {
  bl64_dbg_app_show_function
  bl64_check_parameter 'COMMAND' ||
    { help && return 1; }

  bl64_check_parameter 'REPO_OWNER' &&
    bl64_check_parameter 'REPO_NAME' &&
    s64_github_lib_setup
}

function help() {
  bl64_msg_show_usage \
    '-s -o Owner -r Repository [-V Verbose] [-D Debug] [-h]' \
    'GitHub / Repo / Show' \
    '
    -s           : Show repository settings
    ' '
    -h           : Show help
    ' '
    -o Owner     : user or organization
    -r Repository: repository name
    -V Verbose   : Set verbosity level. Format: one of BL64_MSG_VERBOSE_*
    -D Debug     : Enable debugging mode. Format: one of BL64_DBG_TARGET_*
    '
}

#
# Main
#

declare COMMAND="$BL64_VAR_NULL"
declare OPTION=''
declare REPO_OWNER=''
declare REPO_NAME=''

(($# == 0)) && help && exit 1
while getopts ':so:r:V:D:h' OPTION; do
  case "$OPTION" in
  s) COMMAND='show' ;;
  o) REPO_OWNER="$OPTARG" ;;
  r) REPO_NAME="$OPTARG" ;;
  V) S64_CORE_SET_VERBOSE="$OPTARG" ;;
  D) S64_CORE_SET_DEBUG="$OPTARG" ;;
  h) help && exit 0 ;;
  *) help && exit 1 ;;
  esac
done
bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && initialize || exit $?
bl64_msg_show_batch_start "${BL64_SCRIPT_ID}:$COMMAND"
"$COMMAND" "$REPO_OWNER" "$REPO_NAME"
bl64_msg_show_batch_finish $? "${BL64_SCRIPT_ID}:$COMMAND"
