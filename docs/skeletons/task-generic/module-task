#!/usr/bin/env bash
# template-task: 3.2.0
#   template-task-base: 2.2.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

declare S64_CORE_PATH_AT64="${HOME}/at64"
[[ ! -d "$S64_CORE_PATH_AT64" ]] && S64_CORE_PATH_AT64='/opt'
declare S64_CORE_PATH_ROOT="${S64_CORE_PATH_ROOT:-${S64_CORE_PATH_AT64}/sysop64}"
# shellcheck disable=SC2015 source-path=SCRIPTDIR/..
source "${S64_CORE_PATH_ROOT}/core/core-lib" && source "${S64_CORE_PATH_ROOT}/core/X_MODULE_X-lib" || { echo "Error: unable to load module library (S64_CORE_PATH_AT64=${S64_CORE_PATH_AT64})" && exit 1; }
# shellcheck disable=SC2015 source-path=SCRIPTDIR/../../lib/bl64
source "${S64_CORE_PATH_BL64}/bashlib64-core.bash" || { echo 'Error: unable to load bashlib64' && exit 1; }

declare MY_COMMAND="$BL64_VAR_NULL"
declare MY_OPTION=''
# X_GLOBALS_PLACEHOLDER_X

function my_X_COMMAND_X() {
  bl64_dbg_app_show_function "$@"
  # X_COMMAND_PLACEHOLDER_X
}

function my_initialize() {
  bl64_dbg_app_show_function
  # X_INIT_PARAMETER_PLACEHOLDER_X
  [[ -n "$MY_OPTION" && -n "$MY_COMMAND" ]] &&
    bl64_check_parameter 'MY_PARAMETERX' ||
    { bl64_msg_help_show && return 1; }
  s64_X_MODULE_X_lib_setup ||
    return $?
  # X_INIT_PLACEHOLDER_X
  bl64_msg_show_about
  # X_INIT_INFO_PLACEHOLDER_X
}

#
# Main
#

bl64_lib_script_version_set '1.0.0'
bl64_msg_help_usage_set 'X_HELP_CLI_X [-V Verbose] [-D Debug] [-h]'
bl64_msg_help_about_set 'X_HELP_ABOUT_X'
# shellcheck disable=SC2016
bl64_msg_help_parameters_set \
  'X_HELP_PARAMETERS_X
-V Verbose : Set verbosity level. Format: one of BL64_MSG_VERBOSE_*
-D Debug   : Enable debugging mode. Format: one of BL64_DBG_TARGET_*'

while getopts ':xV:D:h' MY_OPTION; do
  case "$MY_OPTION" in
  x) MY_COMMAND='X_COMMAND_X' ;;
  V) S64_CORE_SET_VERBOSE="$OPTARG" ;;
  D) S64_CORE_SET_DEBUG="$OPTARG" ;;
  h) bl64_msg_help_show && exit 0 ;;
  *) bl64_msg_help_show && exit 1 ;;
  esac
done
bl64_dbg_set_level "$S64_CORE_SET_DEBUG" && bl64_msg_set_level "$S64_CORE_SET_VERBOSE" && my_initialize || exit $?

bl64_msg_show_batch_start "${BL64_SCRIPT_ID}:$MY_COMMAND"
"my_${MY_COMMAND}"
bl64_msg_show_batch_finish $? "${BL64_SCRIPT_ID}:$MY_COMMAND"
