#!/usr/bin/env bash
# Template: 1.0.0
#######################################
# X_MODULE_X / X_APP_NAME_X
#
# Version: 1.0.0
#
#######################################
# Copyright [2024] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

SYSOP64_PATH_BL64="${SYSOP64_PATH_BL64:-/opt/bl64}"
# shellcheck source-path=lib/bl64
source "${SYSOP64_PATH_BL64}/bashlib64-core.bash" || { echo "Error: unable to load bashlib64" && exit 1; }

#
# Globals
#


#
# Functions
#

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function sysop64_initialize() {
  bl64_dbg_app_show_function "@"
  # shellcheck disable=SC2034
  local command="$1"

  bl64_check_parameter 'command' ||
    { sysop64_help && return 1; }

  return 0
}

#######################################
# Show script usage description
#
# Arguments:
#   None
# Outputs:
#   Command line format and description
# Returns:
#   0
#######################################
function sysop64_help() {

  bl64_msg_show_usage \
    '-x|-w [-y X_OPT1_X] [-z] [-V Verbose] [-D Debug] [-h]' \
    'X_APP_INFO_X' \
    '
    -x         : X_COMMAND_INFO_X
    -w         : X_COMMAND_INFO_X
    ' '
    -z         : X_FLAG_INFO_X
    -h         : Show help
    ' '
    -y X_OPT1_X: X_OPTION_INFO_X
    -V Verbose : Set verbosity level. Format: one of BL64_MSG_VERBOSE_*
    -D Debug   : Enable debugging mode. Format: one of BL64_DBG_TARGET_*
    '
}

#
# Main
#

declare sysop64_command="$BL64_VAR_NULL"
declare sysop64_debug="$BL64_DBG_TARGET_NONE"
declare sysop64_option=''
declare sysop64_verbose="$BL64_MSG_VERBOSE_APP"
declare sysop64_X_FLAG_X='0'
declare sysop64_X_OPTION_X=''

(($# == 0)) && sysop64_help && exit 1
while getopts ':xwy:zV:D:h' sysop64_option; do
  case "$sysop64_option" in
  x) sysop64_command='X_COMMAND1_X' ;;
  w) sysop64_command='X_COMMAND2_X' ;;
  y) sysop64_X_OPTION_X="$OPTARG" ;;
  z) sysop64_X_FLAG_X='1' ;;
  V) sysop64_verbose="$OPTARG" ;;
  D) sysop64_debug="$OPTARG" ;;
  h) sysop64_help && exit 0 ;;
  *) sysop64_help && exit 1 ;;
  esac
done
bl64_dbg_set_level "$sysop64_debug" && bl64_msg_set_level "$sysop64_verbose" || exit $?
sysop64_initialize "$sysop64_command" || exit $?

bl64_msg_show_batch_start "$sysop64_command"
case "$sysop64_command" in
'X_COMMAND1_X') "sysop64_${sysop64_command}" "$sysop64_X_FLAG_X" "$sysop64_X_OPTION_X" ;;
'X_COMMAND2_X') "sysop64_${sysop64_command}" ;;
*) bl64_check_alert_parameter_invalid "$sysop64_command" ;;
esac
bl64_msg_show_batch_finish $? "$sysop64_command"
